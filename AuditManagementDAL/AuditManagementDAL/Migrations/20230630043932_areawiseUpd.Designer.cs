// <auto-generated />
using System;
using AuditManagementDAL.AuditDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuditManagementDAL.Migrations
{
    [DbContext(typeof(auditContextObj))]
    [Migration("20230630043932_areawiseUpd")]
    partial class areawiseUpd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AuditManagementDAL.DataModels.AreaStandardMapper", b =>
                {
                    b.Property<Guid>("StdAreaMapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AreaId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<int>("L2")
                        .HasColumnType("int");

                    b.Property<int>("L3")
                        .HasColumnType("int");

                    b.Property<Guid>("SafetyStandardId")
                        .HasColumnType("char(36)");

                    b.Property<int>("SrNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StdAreaMapId");

                    b.ToTable("tbl_AreaStandardMapper");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditArea", b =>
                {
                    b.Property<Guid>("AuditAreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationUnitId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("AuditAreaId");

                    b.ToTable("tbl_auditArea");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditAssigned", b =>
                {
                    b.Property<int>("AssignedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AssignedTo")
                        .HasColumnType("int");

                    b.Property<int>("AuditCalendarId")
                        .HasColumnType("int");

                    b.Property<string>("AuditStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AssignedId");

                    b.ToTable("tbl_auditAssigned");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditAssignee", b =>
                {
                    b.Property<int>("AssigneeFindId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("AssignedTo")
                        .HasColumnType("int");

                    b.Property<int>("AuditeeId")
                        .HasColumnType("int");

                    b.Property<string>("AuditeeStatus")
                        .HasColumnType("longtext");

                    b.HasKey("AssigneeFindId");

                    b.ToTable("tbl_auditAssignee");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditCalendar", b =>
                {
                    b.Property<int>("AuditCalendarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AuditCategory")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AuditName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("AuditStart")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DocumentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DocumentedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ExpectedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("AuditCalendarId");

                    b.ToTable("tbl_auditCalendar");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditCalendarHistory", b =>
                {
                    b.Property<Guid>("DeletionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("AuditCalendarId")
                        .HasColumnType("int");

                    b.Property<string>("AuditCategory")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AuditName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("AuditStart")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateOfDeletion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedByUserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedIPAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DeleterDeptID")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DocumentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DocumentedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ExpectedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GeoTeamId")
                        .HasColumnType("int");

                    b.HasKey("DeletionId");

                    b.ToTable("tbl_auditCalendarHistory");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditCalendarStdDetailL2", b =>
                {
                    b.Property<Guid>("SafetyStandardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuditPlanId")
                        .HasColumnType("char(36)");

                    b.Property<string>("AuditorId")
                        .HasColumnType("longtext");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("StdDetailId")
                        .HasColumnType("char(36)");

                    b.Property<string>("StdSrlNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("SafetyStandardId");

                    b.ToTable("tbl_auditCalendarStdDetailL2");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditCalenderL2", b =>
                {
                    b.Property<Guid>("AuditplanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuditAreaId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("AuditClosureDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("AuditEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditPlanUpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("AuditPlanUpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("AuditStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AuditeeId")
                        .HasColumnType("longtext");

                    b.Property<string>("CommitteeMemId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("DocStatus")
                        .HasColumnType("int");

                    b.Property<string>("ExpectedClosureMonth")
                        .HasColumnType("longtext");

                    b.Property<string>("FinancialQuarter")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FinancialYear")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OperationUnit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AuditplanId");

                    b.ToTable("tbl_auditCalenderL2");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditCategory", b =>
                {
                    b.Property<string>("AuditCategoryCode")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("AuditCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AuditCategoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AuditCreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("AuditCreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditUpdatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("AuditUpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DepartmentCode")
                        .HasColumnType("int");

                    b.HasKey("AuditCategoryCode");

                    b.ToTable("tbl_auditCategory");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditCommitee", b =>
                {
                    b.Property<Guid>("CommitteeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AuditplanId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CommiteeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("MemberType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CommitteeId");

                    b.HasIndex("AuditplanId");

                    b.ToTable("tbl_auditCommittee");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditExecPlanHistory", b =>
                {
                    b.Property<Guid>("DeletionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("AuditClosureDate")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("AuditExecutionId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("AuditPlanId")
                        .HasColumnType("int");

                    b.Property<string>("AuditeeRCA")
                        .HasColumnType("longtext");

                    b.Property<string>("AuditorRCA")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateOfDeletion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedByUserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedIPAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DeptID")
                        .HasColumnType("int");

                    b.Property<string>("DeviationStandard")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ExcutionCategory")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ExecutedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ExecutionStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("GeoTeamId")
                        .HasColumnType("int");

                    b.Property<string>("NarrationOfObservation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("SnapshotImg")
                        .HasColumnType("longblob");

                    b.HasKey("DeletionId");

                    b.ToTable("tbl_auditExecutionHistory");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditExecutionPlan", b =>
                {
                    b.Property<int?>("AuditExecutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditClosureDate")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("AuditPlanId")
                        .HasColumnType("int");

                    b.Property<string>("AuditeeRCA")
                        .HasColumnType("longtext");

                    b.Property<string>("AuditorRCA")
                        .HasColumnType("longtext");

                    b.Property<string>("DeviationStandard")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ExcutionCategory")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ExecutedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ExecutionStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NarrationOfObservation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("SnapshotImg")
                        .HasColumnType("longblob");

                    b.HasKey("AuditExecutionId");

                    b.ToTable("tbl_auditExecutionPlan");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditManagement", b =>
                {
                    b.Property<Guid>("AuditManId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<byte[]>("AttachedFile")
                        .HasColumnType("longblob");

                    b.Property<Guid>("AuditAreaId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("AuditClosureDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("AuditEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("AuditManagementDetailsAuditManDetId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuditPlanID")
                        .HasColumnType("char(36)");

                    b.Property<string>("AuditPlanUpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("AuditPlanUpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("AuditStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AuditeeId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AuditorId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CommiteeMemId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("ExpectedAuditMonth")
                        .HasColumnType("longtext");

                    b.Property<string>("FinancialQuarter")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FinancialYear")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Operationunit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("AuditManId");

                    b.HasIndex("AuditManagementDetailsAuditManDetId");

                    b.ToTable("tbl_auditManagement");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditManagementDetHistory", b =>
                {
                    b.Property<Guid>("DeletionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuditManDetId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuditManId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuditMasterId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("AuditStatus")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("CateOfObs")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CorrectiveAction")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateOfDeletion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedByUserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedIPAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DeptID")
                        .HasColumnType("int");

                    b.Property<string>("DeviaSafetyStd")
                        .HasColumnType("longtext");

                    b.Property<int>("GeoTeamId")
                        .HasColumnType("int");

                    b.Property<string>("NarrationOb")
                        .HasColumnType("longtext");

                    b.Property<string>("PreventiveAction")
                        .HasColumnType("longtext");

                    b.Property<string>("ResponsPersonId")
                        .HasColumnType("longtext");

                    b.Property<string>("RiskCategory")
                        .HasColumnType("longtext");

                    b.Property<string>("RootCauseObsAuditee")
                        .HasColumnType("longtext");

                    b.Property<string>("RootCauseObsAuditor")
                        .HasColumnType("longtext");

                    b.Property<string>("SrlNo")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("UploadedImg")
                        .HasColumnType("longblob");

                    b.HasKey("DeletionId");

                    b.ToTable("tbl_auditManagementDetailsHistory");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditManagementDetails", b =>
                {
                    b.Property<Guid>("AuditManDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ActivityLog")
                        .HasColumnType("longtext");

                    b.Property<Guid>("AuditManId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuditMasterId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("AuditStatus")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("CateOfObs")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CorrectiveAction")
                        .HasColumnType("longtext");

                    b.Property<string>("DeviaSafetyStd")
                        .HasColumnType("longtext");

                    b.Property<string>("NarrationOb")
                        .HasColumnType("longtext");

                    b.Property<string>("PreventiveAction")
                        .HasColumnType("longtext");

                    b.Property<string>("ResponsPersonId")
                        .HasColumnType("longtext");

                    b.Property<string>("RiskCategory")
                        .HasColumnType("longtext");

                    b.Property<string>("RootCauseObsAuditee")
                        .HasColumnType("longtext");

                    b.Property<string>("RootCauseObsAuditor")
                        .HasColumnType("longtext");

                    b.Property<string>("SrlNo")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("UploadedImg")
                        .HasColumnType("longblob");

                    b.HasKey("AuditManDetId");

                    b.ToTable("tbl_auditManagementDetails");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditManagementHistory", b =>
                {
                    b.Property<Guid>("DeletionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AreaId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("AuditAreaId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("AuditClosureDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("AuditEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("AuditManId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuditPlanID")
                        .HasColumnType("char(36)");

                    b.Property<string>("AuditPlanUpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("AuditPlanUpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("AuditStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AuditeeId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AuditorId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CommiteeMemId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfDeletion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedByUserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedIPAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DeptID")
                        .HasColumnType("int");

                    b.Property<string>("ExpectedAuditMonth")
                        .HasColumnType("longtext");

                    b.Property<string>("FinancialQuarter")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FinancialYear")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("GeoTeamId")
                        .HasColumnType("int");

                    b.Property<string>("Operationunit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("DeletionId");

                    b.ToTable("tbl_auditMangementHistory");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditManagementL2", b =>
                {
                    b.Property<Guid>("AuditManId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuditAreaId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("AuditClosureDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("AuditEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("AuditPlanID")
                        .HasColumnType("char(36)");

                    b.Property<string>("AuditPlanUpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("AuditPlanUpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("AuditStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AuditeeId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CommiteeMemId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("ExpectedAuditMonth")
                        .HasColumnType("longtext");

                    b.Property<string>("FinancialQuarter")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FinancialYear")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Operationunit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("AuditManId");

                    b.ToTable("tbl_auditManagementL2");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditManagementStdDetaiL2", b =>
                {
                    b.Property<Guid>("SafetyStandardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuditManId")
                        .HasColumnType("char(36)");

                    b.Property<string>("AuditorId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("FileAttachment")
                        .HasColumnType("longblob");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("StdDetailId")
                        .HasColumnType("char(36)");

                    b.Property<string>("StdSrlNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("SafetyStandardId");

                    b.ToTable("tbl_auditManagementStdDetaiL2");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditMaster", b =>
                {
                    b.Property<Guid>("AuditMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AuditCategoryId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AuditCheckPoint")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AuditCreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("AuditManagementDetailsAuditManDetId")
                        .HasColumnType("char(36)");

                    b.Property<string>("AuditRemarks")
                        .HasColumnType("longtext");

                    b.Property<string>("AuditUpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("AuditUpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("AuditMasterId");

                    b.HasIndex("AuditManagementDetailsAuditManDetId");

                    b.ToTable("tbl_auditMaster");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditObservationDetailL2", b =>
                {
                    b.Property<Guid>("AuditObsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ActivityLog")
                        .HasColumnType("longtext");

                    b.Property<Guid>("AuditMasterId")
                        .HasColumnType("char(36)");

                    b.Property<int>("AuditStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CorrectiveAction")
                        .HasColumnType("longtext");

                    b.Property<string>("NarrationOb")
                        .HasColumnType("longtext");

                    b.Property<string>("PreventiveAction")
                        .HasColumnType("longtext");

                    b.Property<string>("ResponsPersonId")
                        .HasColumnType("longtext");

                    b.Property<string>("RootCauseObsAuditee")
                        .HasColumnType("longtext");

                    b.Property<string>("RootCauseObsAuditor")
                        .HasColumnType("longtext");

                    b.Property<string>("Severity")
                        .HasColumnType("longtext");

                    b.Property<string>("SrlNo")
                        .HasColumnType("longtext");

                    b.Property<Guid>("StdDetailId")
                        .HasColumnType("char(36)");

                    b.Property<byte[]>("UploadedImg")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.HasKey("AuditObsId");

                    b.ToTable("tbl_auditObservationDetailsL2");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditPlan", b =>
                {
                    b.Property<Guid>("AuditplanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuditAreaId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("AuditClosureDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("AuditEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditPlanUpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("AuditPlanUpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("AuditStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AuditeeId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AuditorId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("CommitteeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CommitteeMemId")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("DocStatus")
                        .HasColumnType("int");

                    b.Property<string>("ExpectedClosureMonth")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FinancialQuarter")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FinancialYear")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OperationUnit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AuditplanId");

                    b.ToTable("tbl_auditPlan");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditPlanHistory", b =>
                {
                    b.Property<Guid>("DeletionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuditAreaId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("AuditClosureDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("AuditEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditPlanUpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("AuditPlanUpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("AuditStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AuditType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AuditeeId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AuditorId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("AuditplanId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CommitteeMemId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfDeletion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedByUserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DeletedIPAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("DeptID")
                        .HasColumnType("int");

                    b.Property<int?>("DocStatus")
                        .HasColumnType("int");

                    b.Property<string>("ExpectedClosureMonth")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FinancialQuarter")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FinancialYear")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("GeoTeamId")
                        .HasColumnType("int");

                    b.Property<string>("OperationUnit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("DeletionId");

                    b.ToTable("tbl_auditPlanHistory");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditeeCAPA", b =>
                {
                    b.Property<int>("CapaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AuditeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CapaFillDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CapaStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CapaUpdBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CapaUpdDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CapaId");

                    b.ToTable("tbl_auditCAPA");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditeeResponse", b =>
                {
                    b.Property<string>("TaskCode")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("AuditManDetId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuditManId")
                        .HasColumnType("char(36)");

                    b.Property<string>("AuditorRemarks")
                        .HasColumnType("longtext");

                    b.Property<Guid>("AuditplanId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CorporateDateofClosure")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CorporateRemarks")
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ExpectedClosureDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FinalClosedByCorporateUser")
                        .HasColumnType("longtext");

                    b.Property<string>("FinalStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("TaskAssignedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("TaskAssignedTo")
                        .HasColumnType("longtext");

                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("UploadSupportDocs")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("TaskCode");

                    b.ToTable("tbl_AuditeeResponse");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditorFindings", b =>
                {
                    b.Property<int>("AssigneeFindId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AssignedId")
                        .HasColumnType("int");

                    b.Property<string>("AssigneeFindings")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FindingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FindingStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AssigneeFindId");

                    b.ToTable("tbl_auditorFindings");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditorResponse", b =>
                {
                    b.Property<string>("TaskCode")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("AuditManDetId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuditManId")
                        .HasColumnType("char(36)");

                    b.Property<string>("AuditorRemarks")
                        .HasColumnType("longtext");

                    b.Property<Guid>("AuditplanId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CorporateDateofClosure")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CorporateRemarks")
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ExpectedClosureDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FinalClosedByCorporateUser")
                        .HasColumnType("longtext");

                    b.Property<string>("FinalStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("TaskAssignedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("TaskAssignedTo")
                        .HasColumnType("longtext");

                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("UploadSupportDocs")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("TaskCode");

                    b.ToTable("tbl_AuditorResponse");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.DepartmentMaster", b =>
                {
                    b.Property<Guid>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AuditCategoryCode")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid?>("AuditplanId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("OperationUnitCode")
                        .HasColumnType("char(36)");

                    b.HasKey("DepartmentId");

                    b.HasIndex("AuditCategoryCode");

                    b.HasIndex("AuditplanId");

                    b.ToTable("tbl_department_Master");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.ModelRBAC", b =>
                {
                    b.Property<Guid>("RbacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsUpdate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsWrite")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModuleId")
                        .IsRequired()
                        .HasColumnType("char(36)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("RbacId");

                    b.ToTable("tbl_modelRBACs");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.ModuleMaster", b =>
                {
                    b.Property<Guid?>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ModuleId");

                    b.ToTable("tbl_moduleMaster");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.OperationUnit", b =>
                {
                    b.Property<Guid>("OperationUnitCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DepartmentMasterDepartmentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("OperationUnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("OperationUnitName")
                        .HasColumnType("longtext");

                    b.HasKey("OperationUnitCode");

                    b.HasIndex("DepartmentMasterDepartmentId");

                    b.ToTable("tbl_operationUnit");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsAuditee")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsAuditor")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsCapa")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsCommHead")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsCommMem")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsCorporate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsInventory")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsMaintenance")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsOperation")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsProduction")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSafety")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsTaskForce")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsU0Login")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.TaskDetails", b =>
                {
                    b.Property<string>("TaskCode")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("AuditManDetId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuditManId")
                        .HasColumnType("char(36)");

                    b.Property<string>("AuditeeRemarks")
                        .HasColumnType("longtext");

                    b.Property<string>("AuditorRemarks")
                        .HasColumnType("longtext");

                    b.Property<Guid>("AuditplanId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CorporateDateofClosure")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CorporateRemarks")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CurrentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("ExpectedClosureDate")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FinalClosedByCorporateUser")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FinalStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("TaskAssignedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaskAssignedTo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("UploadSupportDocs")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createdDate")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.HasKey("TaskCode");

                    b.ToTable("tbl_taskDetails");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.UserModel", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("Uid")
                        .HasColumnType("int");

                    b.HasKey("UserName");

                    b.ToTable("tbl_UserModel");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.UsersCredential", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DeactivatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("DeptID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("EmpCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("GeoTeamId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActivated")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LockedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<int>("RetryAttempts")
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("SecretAnswer")
                        .HasColumnType("longtext");

                    b.Property<string>("SecretQuestion")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("UsersCredential");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditCommitee", b =>
                {
                    b.HasOne("AuditManagementDAL.DataModels.AuditPlan", null)
                        .WithMany("auditCommitees")
                        .HasForeignKey("AuditplanId");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditManagement", b =>
                {
                    b.HasOne("AuditManagementDAL.DataModels.AuditManagementDetails", null)
                        .WithMany("auditManagements")
                        .HasForeignKey("AuditManagementDetailsAuditManDetId");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditMaster", b =>
                {
                    b.HasOne("AuditManagementDAL.DataModels.AuditManagementDetails", null)
                        .WithMany("auditMasters")
                        .HasForeignKey("AuditManagementDetailsAuditManDetId");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.DepartmentMaster", b =>
                {
                    b.HasOne("AuditManagementDAL.DataModels.AuditCategory", null)
                        .WithMany("DepartMentMaster")
                        .HasForeignKey("AuditCategoryCode");

                    b.HasOne("AuditManagementDAL.DataModels.AuditPlan", null)
                        .WithMany("departmentMasters")
                        .HasForeignKey("AuditplanId");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.OperationUnit", b =>
                {
                    b.HasOne("AuditManagementDAL.DataModels.DepartmentMaster", null)
                        .WithMany("OperationUnit")
                        .HasForeignKey("DepartmentMasterDepartmentId");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditCategory", b =>
                {
                    b.Navigation("DepartMentMaster");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditManagementDetails", b =>
                {
                    b.Navigation("auditManagements");

                    b.Navigation("auditMasters");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.AuditPlan", b =>
                {
                    b.Navigation("auditCommitees");

                    b.Navigation("departmentMasters");
                });

            modelBuilder.Entity("AuditManagementDAL.DataModels.DepartmentMaster", b =>
                {
                    b.Navigation("OperationUnit");
                });
#pragma warning restore 612, 618
        }
    }
}
